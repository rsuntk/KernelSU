name: Build Manager Common

on:
  workflow_call:
    inputs:
      spoofed:
        type: boolean
        default: false

jobs:
  build-manager-common:
    environment: signing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./manager

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Randomize PKG names
        if: inputs.spoofed == true
        id: spoofed_state
        run: |
          echo "- Randomizing me.weishu.kernelsu ..."
          chmod +x randomizer
          ./randomizer
          echo "- Done"

      - name: Get artifact name
        id: real_artifact_name
        run: |
          if [ "${{ inputs.spoofed }}" == "true" ]; then
            echo "MGR_ARTIFACT_NAME=manager-spoofed" >> $GITHUB_OUTPUT
            echo "MPS_ARTIFACT_NAME=mappings-spoofed" >> $GITHUB_OUTPUT
          else
            echo "MGR_ARTIFACT_NAME=manager" >> $GITHUB_OUTPUT
            echo "MPS_ARTIFACT_NAME=mappings" >> $GITHUB_OUTPUT
          fi

      - name: Setup need_upload
        id: need_upload
        run: |
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            echo "UPLOAD=true" >> $GITHUB_OUTPUT
          else
            echo "UPLOAD=false" >> $GITHUB_OUTPUT
          fi

      - name: Write key
        if: ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/main' ) || github.ref_type == 'tag' }}
        run: |
          if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            {
              echo KEYSTORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}'
              echo KEY_ALIAS='${{ secrets.KEY_ALIAS }}'
              echo KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}'
              echo KEYSTORE_FILE='key.jks'
            } >> gradle.properties
            echo ${{ secrets.KEYSTORE }} | base64 -d > key.jks
          fi

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Download arm64 ksud
        uses: actions/download-artifact@v5
        with:
          name: ksud-aarch64-linux-android
          path: .

      - name: Download arm ksud
        uses: actions/download-artifact@v5
        with:
          name: ksud-armv7-linux-androideabi
          path: .

      - name: Copy ksud to app jniLibs
        run: |
          cp -f ../aarch64-linux-android/release/ksud ../manager/app/src/main/jniLibs/arm64-v8a/libksud.so
          mkdir -p app/src/main/jniLibs/armeabi-v7a
          cp -f ../armv7-linux-androideabi/release/ksud ../manager/app/src/main/jniLibs/armeabi-v7a/libksud.so

      - name: Build with Gradle
        run: |
          {
            echo 'org.gradle.parallel=true'
            echo 'org.gradle.vfs.watch=true'
            echo 'org.gradle.jvmargs=-Xmx2048m'
            echo 'android.native.buildOutput=verbose'
          } >> gradle.properties
          sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties
          ./gradlew clean assembleRelease

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        if: ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/main' ) || github.ref_type == 'tag' }}
        with:
          name: ${{ steps.real_artifact_name.outputs.MGR_ARTIFACT_NAME }}
          path: manager/app/build/outputs/apk/release/*.apk

      - name: Upload mappings
        uses: actions/upload-artifact@v4
        if: ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/main' ) || github.ref_type == 'tag' }}
        with:
          name: ${{ steps.real_artifact_name.outputs.MPS_ARTIFACT_NAME }}
          path: "manager/app/build/outputs/mapping/release/"

      - name: Upload to telegram
        if: github.event_name != 'pull_request' && steps.need_upload.outputs.UPLOAD == 'true'
        env:
          CHAT_ID: ${{ secrets.CHAT_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          MESSAGE_THREAD_ID: ${{ secrets.MESSAGE_THREAD_ID }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            if [ "${{ inputs.spoofed }}" == "true" ]; then
              export TITLE="Spoofed Manager"
            else
              export TITLE="Manager"
            fi
            export VERSION=$(git rev-list --count HEAD)
            APK=$(find ./app/build/outputs/apk/release -name "*.apk")
            bash $GITHUB_WORKSPACE/scripts/rsubot.sh $APK
          fi
